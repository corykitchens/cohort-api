service: cohort-api # NOTE: update this with your service name
provider:
  name: aws
  runtime: nodejs8.10
  region: us-west-2
  stage: dev
  iamRoleStatements:
    - Effect: "Allow"
      Action:
      - "dynamodb:List*"
      - "dynamodb:DescribeReservedCapacity*"
      - "dynamodb:DescribeLimits"
      - "dynamodb:DescribeTimeToLive"
      Resource: "*"
    - Effect: "Allow"
      Action:
      - "dynamodb:BatchGet*"
      - "dynamodb:DescribeStream"
      - "dynamodb:DescribeTable"
      - "dynamodb:Get*"
      - "dynamodb:Query"
      - "dynamodb:Scan"
      - "dynamodb:BatchWrite*"
      - "dynamodb:CreateTable"
      - "dynamodb:Delete*"
      - "dynamodb:Update*"
      - "dynamodb:PutItem"
      Resource: 
        Fn::Join:
          - ""
          - - "arn:aws:dynamodb:us-west-2:*:table/"
            - Ref: "TriviaQuestionsTable"



package:
  include:
    - trivia.js
    - db/*
  exlude:
    - .git/**

functions:
  get_trivia_question:
    handler: trivia.get
    name: GetTriviaQuestion
    memorySize: 512
    timeout: 100
    environment:
      DB_ENDPOINT: { "Ref": "TriviaQuestionsTable"}
    events:
      - http:
          path: api/trivia/question/random
          method: get
  create_new_trivia_question:
    handler: trivia.create
    name: CreateTriviaQuestion
    memorySize: 512
    timeout: 100
    environment:
      DB_ENDPOINT: { "Ref": "TriviaQuestionsTable"}
    events:
      - http:
          path: api/trivia/question
          method: post

resources:
  Resources:
    TriviaQuestionsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: triviaQuestionID
            AttributeType: S
        KeySchema:
          - AttributeName: triviaQuestionID
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
  
plugins:
  - serverless-offline